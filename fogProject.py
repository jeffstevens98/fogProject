'''
Jeff Stevens
Dr. Jaimie Kelley
7 May 2020
Fog Computing Project
--------------------------------------------------------------------------------------------------------------
API Instructions: https://dev.fitbit.com/apps/oauthinteractivetutorial?clientEncodedId=22BQJZ&clientSecret=83768170a5787fd8d7a76c4ae169d28e&redirectUri=http://localhost/&applicationType=PERSONAL

UserId: 5XTF7P

Refresh Token:


Make a request:
curl -i -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMkJRSloiLCJzdWIiOiI1WFRGN1AiLCJpc3MiOiJGaXRiaXQiLCJ0eXAiOiJ
hY2Nlc3NfdG9rZW4iLCJzY29wZXMiOiJyc29jIHJzZXQgcmFjdCBybG9jIHJ3ZWkgcmhyIHJwcm8gcm51dCByc2xlIiwiZXhwIjox
NTg5MzI4OTYwLCJpYXQiOjE1ODg3MjQxNjB9.kt2x68AKvH3uKxUJFh5Yo_OpYgu9NXN0Z4lDqjQQ4MQ" https://api.fitbit.com/1/user/-/profile.json
--------------------------------------------------------------------------------------------------------------
'''

###### Establish connection to the Redis Database within the Docker container at port 4269 ######
import redis

rdb = redis.Redis("localhost",port=4269,health_check_interval=5)
rdb.flushdb()
#################################################################################################


###### Query the fitbit API to acquire data, generated by the API instructions and the following website: https://curl.trillworks.com/#python ######
import requests

headers = {
    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMkJRSloiLCJzdWIiOiI1WFRGN1AiLCJpc3MiOiJGaXRiaXQiLCJ0eXAiOiJhY2Nlc3NfdG9rZW4iLCJzY29wZXMiOiJyc29jIHJzZXQgcmFjdCBybG9jIHJ3ZWkgcmhyIHJwcm8gcm51dCByc2xlIiwiZXhwIjoxNTg5MzI4OTYwLCJpYXQiOjE1ODg3MjQxNjB9.kt2x68AKvH3uKxUJFh5Yo_OpYgu9NXN0Z4lDqjQQ4MQ',
}
response = requests.get('https://api.fitbit.com/1/user/-/profile.json', headers=headers)
print("API Query: ")
print(response) #print the response code, 200 good, 400 bad
data = open("data.json","w")
print(response.text, "\n")
data.write(response.text)
data.close()
####################################################################################################################################################


###### Aggregate the data in Redis ######
import json
print("Aggregating data in Redis...")
with open("data.json", "r") as read_file:
	data = json.load(read_file)
for user in data.keys():
	for pair in data[user].items():
		rdb.set(str(pair[0]).encode('utf-8'),str(pair[1]).encode('utf-8'))
print("DONE\n")
#########################################


###### Process the data ######
print("Processing data...")
#calculate average distance walked
averageDailySteps  = float(rdb.get("averageDailySteps"))
strideLengthWalking = float(rdb.get("strideLengthWalking"))
averageDistanceWalked = averageDailySteps * strideLengthWalking #stride length measured in inches
rdb.set("averageDistanceWalked","averageDistanceWalked".encode('utf-8'))
print("DONE\n")
##############################


###### Prepare the data to be sent to the cloud based on cloud preferences ######
from bs4 import BeautifulSoup

print("Packaging data to be sent to the cloud...")
response = requests.get('https://jeffstevens98.github.io/')
html_doc = response.text
soup = BeautifulSoup(html_doc, 'html.parser')
#Below, we only select 3 preferred pieces of data to send to the cloud, but more can be added if we add more preferences to our webpage
selectedData1 = rdb.get(soup.pref1.string).decode('utf-8')
selectedData2 = rdb.get(soup.pref2.string).decode('utf-8')
selectedData3 = rdb.get(soup.pref3.string).decode('utf-8')
print("The cloud server is requesting the following data: " + soup.pref1.string + ", " + soup.pref2.string + ", " + soup.pref3.string)
dataPackage = {}
dataPackage[soup.pref1.string] = selectedData1
dataPackage[soup.pref2.string] = selectedData2
dataPackage[soup.pref3.string] = selectedData3

#Serialize our dataPackage dictionary object into a JSON file to be accessed by the cloud via SCP or some other method
with open("processedData.json", "w") as write_file:
    json.dump(dataPackage, write_file)

#Alternatively, we can just send the data through a POST request
response = requests.post('https://httpbin.org/post', json=dataPackage)
print("Transmission of processed data to the cloud: ")
print(response)
#################################################################################

